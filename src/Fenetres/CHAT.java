/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Fenetres;

import FECOP.ReponseFecop;
import FECOP.RequeteFecop;
import Message.MsgSigned;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.Socket;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.security.Security;
import java.util.Base64;
import java.util.Date;
import java.util.Properties;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import network.Network;
import rti4_chatudp.Lecture;

/**
 *
 * @author Pierre
 */
public class CHAT extends javax.swing.JFrame {

    String ipAddr; 
    String user; 
    String passwd; 
    String servAddr;
    String port; 
    Socket Csock;
    MulticastSocket CsockUDP;
    ObjectInputStream ois;
    
    /**
     * Creates new form CHAT
     */
    public CHAT() {
        initComponents();
        Security.addProvider(new org.bouncycastle.jce.provider.BouncyCastleProvider()); // ajout de bouncycastle
        
        chatLayout.setVisible(false);
        login.setVisible(true);
        
        try {
            FileInputStream in = new FileInputStream("donnees.properties");
            Properties data = new Properties();
            data.load(in);
            ipAddr = (String)data.get("ip");
        } catch (Exception ex) {
            Logger.getLogger(CHAT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chatLayout = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextChat = new javax.swing.JTextArea();
        textEnvoi = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        loginLayout = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        login = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        validerButton = new javax.swing.JButton();
        annulerButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TextChat.setEditable(false);
        TextChat.setColumns(20);
        TextChat.setRows(5);
        jScrollPane1.setViewportView(TextChat);

        textEnvoi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textEnvoiKeyPressed(evt);
            }
        });

        sendButton.setText("Envoyer");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        chatLayout.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        chatLayout.setLayer(textEnvoi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        chatLayout.setLayer(sendButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout chatLayoutLayout = new javax.swing.GroupLayout(chatLayout);
        chatLayout.setLayout(chatLayoutLayout);
        chatLayoutLayout.setHorizontalGroup(
            chatLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
            .addGroup(chatLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(chatLayoutLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(chatLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1)
                        .addGroup(chatLayoutLayout.createSequentialGroup()
                            .addComponent(textEnvoi, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        chatLayoutLayout.setVerticalGroup(
            chatLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
            .addGroup(chatLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(chatLayoutLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(chatLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textEnvoi, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sendButton))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLabel1.setText("Login : ");

        jLabel2.setText("Password : ");

        login.setText("admin");
        login.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginKeyPressed(evt);
            }
        });

        password.setText("admin");
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordKeyPressed(evt);
            }
        });

        validerButton.setText("Valider");
        validerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerButtonActionPerformed(evt);
            }
        });

        annulerButton.setText("Annuler");
        annulerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerButtonActionPerformed(evt);
            }
        });

        loginLayout.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        loginLayout.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        loginLayout.setLayer(login, javax.swing.JLayeredPane.DEFAULT_LAYER);
        loginLayout.setLayer(password, javax.swing.JLayeredPane.DEFAULT_LAYER);
        loginLayout.setLayer(validerButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        loginLayout.setLayer(annulerButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout loginLayoutLayout = new javax.swing.GroupLayout(loginLayout);
        loginLayout.setLayout(loginLayoutLayout);
        loginLayoutLayout.setHorizontalGroup(
            loginLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginLayoutLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(validerButton)
                .addGap(33, 33, 33)
                .addComponent(annulerButton)
                .addGap(42, 42, 42))
            .addGroup(loginLayoutLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(loginLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(login)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        loginLayoutLayout.setVerticalGroup(
            loginLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginLayoutLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(loginLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(loginLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(loginLayoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(validerButton)
                    .addComponent(annulerButton))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chatLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(loginLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chatLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(loginLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void write(String message, String type, String u, String cpt) {
        TextChat.append("\n" + message);
    }
    
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        try {
            String message = user + ":   " + textEnvoi.getText(); 
            
            if(message.substring(message.length()-1).equals("?")) { // Question
                System.out.println("\nQuestion\n");
                MessageDigest md = MessageDigest.getInstance("SHA-1", "BC");

                md.update((textEnvoi.getText()).getBytes()); 

                byte[] msgD = md.digest();
                String t = Base64.getEncoder().encodeToString(msgD);
                int cpt = (int)(Math.random()*10);
                
                message = message + "@" + user + String.valueOf(cpt) + "#" + t + "#";
                
                System.out.println("message : " + message);
            }
            
            byte[] buf = message.getBytes();
            
            DatagramPacket paquet = new DatagramPacket(buf, buf.length,InetAddress.getByName("239.5.5.5"), Integer.parseInt(port));
            
            CsockUDP.send(paquet);
            System.out.println("Paquet envoyé");
            textEnvoi.setText("");
        } catch (Exception ex) {
            Logger.getLogger(CHAT.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void textEnvoiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textEnvoiKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            sendButtonActionPerformed(null);
        }
    }//GEN-LAST:event_textEnvoiKeyPressed

    private void validerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerButtonActionPerformed
        try {
            user = login.getText();
            passwd = password.getText();
            
            MessageDigest md = MessageDigest.getInstance("SHA-1", "BC");
            md.update(user.getBytes());
            md.update(passwd.getBytes());
            
            long temps = (new Date()).getTime(); // pour digest salé 
            SecureRandom sec = new SecureRandom();
            double alea = sec.nextDouble(); // pour digest salé 
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            DataOutputStream bdos = new DataOutputStream(baos);
            bdos.writeLong(temps); bdos.writeDouble(alea);

            md.update(baos.toByteArray());
            
            byte[] msgD = md.digest();
            
            MsgSigned lp = new MsgSigned(user, temps, alea, msgD);
            
            RequeteFecop req = new RequeteFecop(RequeteFecop.LOGIN, lp);
            
            Network n = new Network();
            Csock = n.Init();
            n.SendRequest(Csock, req);
            
            ReponseFecop rep = null;

            ois = new ObjectInputStream(Csock.getInputStream());
                                
            rep = (ReponseFecop)ois.readObject();
            System.out.println(" *** Reponse reçue : " + rep.getCharge());
            
            if(rep.getCode() == ReponseFecop.LOG_OK) {
                StringTokenizer st = new StringTokenizer(rep.getCharge(), "#");
                servAddr = st.nextToken();
                port = st.nextToken();

                CsockUDP = new MulticastSocket(Integer.parseInt(port));
                CsockUDP.joinGroup(InetAddress.getByName("239.5.5.5"));

                Lecture lect = new Lecture(Integer.parseInt(port), this); // thread lit sur port et affiche sur fenetre 
                lect.start();

                loginLayout.setVisible(false);
                chatLayout.setVisible(true);
            }
            else {
                JOptionPane.showMessageDialog(null, "Client / Password incorrect !", "Nodidju !", JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception ex) {
            Logger.getLogger(CHAT.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_validerButtonActionPerformed

    private void annulerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_annulerButtonActionPerformed

    private void loginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            validerButtonActionPerformed(null);
        }
    }//GEN-LAST:event_loginKeyPressed

    private void passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            validerButtonActionPerformed(null);
        }
    }//GEN-LAST:event_passwordKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CHAT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CHAT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CHAT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CHAT.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CHAT().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea TextChat;
    private javax.swing.JButton annulerButton;
    private javax.swing.JLayeredPane chatLayout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField login;
    private javax.swing.JLayeredPane loginLayout;
    private javax.swing.JTextField password;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextField textEnvoi;
    private javax.swing.JButton validerButton;
    // End of variables declaration//GEN-END:variables
}
